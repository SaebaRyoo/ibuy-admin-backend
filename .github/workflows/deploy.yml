name: Docker Image CI/CD

on:
  push:
    branches:
      - main  # 当 main 分支有推送时触发

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    # 定义环境变量
#    env:
#      REPOSITORY_URL: ${{ secrets.REPOSITORY_URL }}  # 仓库 URL
#      PROJECT_DIR: ~/work/ibuy-backend  # 项目工作目录

    steps:
      # 切换分支
      - name: Checkout
        uses: actions/checkout@v4
      # 步骤2 给当前服务器安装node
      - name: use node
        uses: actions/setup-node@v4.2.0
        with:
          node-version: 20
          cache: 'yarn'
      # 步骤3 下载项目依赖
      - name: install
        run: yarn install
      # 步骤4 打包node项目
      - name: build
        run: yarn build


      - name: Deploy to server
        uses: easingthemes/ssh-deploy@v5.1.0
        with:
          # 服务器的主机地址
          REMOTE_HOST: ${{ secrets.SERVER_HOST }}
          # 服务器用户名
          REMOTE_USER: ${{ secrets.SERVER_USERNAME }}
          # 服务器私钥
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_PRIVATE_KEY }}
          # 本地源目录，这里设置为当前工作目录
          SOURCE: |
            dist
            docker-compose.yml
            Dockerfile
          SCRIPT_BEFORE: |
            # 创建工作目录
            mkdir -p ~/work/ibuy-backend
            rm -rf ~/work/ibuy-backend/*

          TARGET: '~/work/ibuy-backend'


          # 部署后执行的脚本
          SCRIPT_AFTER: |
            
            # 进入工作目录
            cd ~/work/ibuy-backend

#            # 检查项目目录是否存在，如果不存在则克隆仓库
#            if [ ! -d ".git" ]; then
#              echo "项目目录未初始化，正在克隆仓库..."
#              git clone https://github.com/SaebaRyoo/ibuy-backend.git ~/work/ibuy-backend || exit 1
#            fi
#            # 拉取最新代码
#            echo "拉取最新代码..."
#            git pull origin main || exit 1

            # 构建并启动 Docker 容器
            echo "启动 Docker 容器..."
            docker-compose up --build -d